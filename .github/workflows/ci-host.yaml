name: CI Host

on:
  push:
    branches: [main]
  pull_request:
    paths:
      - "packages/host/**"
      - "packages/base/**"
      - "packages/boxel-icons/**"
      - "packages/boxel-ui/**"
      - "packages/catalog-realm/**"
      - "packages/eslint-plugin-boxel/**"
      - "packages/realm-server/**"
      - "packages/runtime-common/**"
      - ".github/workflows/ci-host.yml"
      - "package.json"
      - "pnpm-lock.yaml"
  workflow_dispatch:

env:
  HOST_SHARD_INDEXES: "[1,2,3,4,5,6,7,8,9,10,11,12,13,14]"
  HOST_SHARD_TOTAL: 14

permissions:
  checks: write
  contents: read
  id-token: write
  pull-requests: write

jobs:
  host-test:
    name: Host Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: ${{ fromJson(env.HOST_SHARD_INDEXES) }}
    concurrency:
      group: boxel-host-test${{ github.head_ref || github.run_id }}-shard${{ matrix.shardIndex }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
      - uses: ./.github/actions/init
      - name: Build boxel-icons
        run: pnpm build
        working-directory: packages/boxel-icons
      - name: Serve boxel-icons
        run: pnpm serve &> /tmp/icon-server.log &
        working-directory: packages/boxel-icons
      - name: Build boxel-ui
        run: pnpm build
        working-directory: packages/boxel-ui/addon
      # this is to hopefully address the CI network flakiness that we
      # occasionally see in host tests.
      # https://github.com/actions/runner-images/issues/1187#issuecomment-686735760
      - name: Disable TCP/UDP network offloading
        run: sudo ethtool -K eth0 tx off rx off
      - name: Start host to serve assets for fastboot
        uses: JarvusInnovations/background-action@2428e7b970a846423095c79d43f759abf979a635 # 1.0.7
        with:
          run: NODE_OPTIONS="--max_old_space_size=4096" pnpm start &
          working-directory: packages/host
          wait-for: 3m
          wait-on: http-get://localhost:4200
      - name: Start realm servers
        run: pnpm start:skip-experiments | tee -a /tmp/server.log &
        working-directory: packages/realm-server
      - name: create realm users
        run: pnpm register-realm-users
        working-directory: packages/matrix
      - name: host test suite (shard ${{ matrix.shardIndex }})
        run: pnpm test-with-percy
        env:
          PERCY_GZIP: true
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_HOST }}
          PERCY_PARALLEL_NONCE: ${{ github.run_id }}-${{ github.run_attempt }}
          HOST_TEST_PARTITION: ${{ matrix.shardIndex }}
          HOST_TEST_PARTITION_COUNT: ${{ env.HOST_SHARD_TOTAL }}
        working-directory: packages/host
      - name: Upload junit report to GitHub Actions Artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # 4.6.1
        if: always()
        with:
          name: host-test-report-${{ matrix.shardIndex }}
          path: junit/host-${{ matrix.shardIndex }}.xml
          retention-days: 30
      - name: Print realm server logs
        if: always()
        run: cat /tmp/server.log
      - name: Upload realm server log
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # 4.6.1
        if: always()
        with:
          name: realm-server-log-${{ matrix.shardIndex }}
          path: /tmp/server.log
          retention-days: 30
      - name: Upload icon server log
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # 4.6.1
        if: always()
        with:
          name: icon-server-log-${{ matrix.shardIndex }}
          path: /tmp/icon-server.log
          retention-days: 30

  host-merge-reports-and-publish:
    name: Merge Host reports and publish
    if: always()
    needs: host-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
      - uses: ./.github/actions/init

      - name: Finalise Percy
        run: npx percy build:finalize
        working-directory: packages/host
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_HOST }}
          PERCY_PARALLEL_NONCE: ${{ github.run_id }}-${{ github.run_attempt }}

      # Download only the latest artifact for each shard. This is robust against
      # "Rerun failing jobs" where only some shards are re-executed (and thus have
      # newer artifacts) while successful shards keep their older artifacts. Using
      # pattern+merge would pull ALL historical artifacts for the workflow run.
      # We instead enumerate artifacts, pick the newest (by created_at) per shard
      # name, and download by artifact ID.
      - name: Download latest JUnit shard reports
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail

          mkdir -p all-host-reports

          echo "Listing artifacts for run ${GITHUB_RUN_ID}"
          gh api repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts --paginate > artifacts.json

          echo "Selecting latest artifact per shard"
          missing=0
          for i in $(seq 1 "${HOST_SHARD_TOTAL}"); do
            name="host-test-report-$i"
            id=$(jq -r --arg n "$name" '
              .artifacts
              | map(select(.name==$n and .expired==false))
              | sort_by(.created_at)
              | last
              | .id // empty
            ' artifacts.json)
            if [ -z "$id" ] || [ "$id" = "null" ]; then
              echo "ERROR: No artifact found for $name" >&2
              missing=1
              continue
            fi
            echo "Downloading $name (artifact id $id)"
            zipFile="$name.zip"
            gh api repos/${GITHUB_REPOSITORY}/actions/artifacts/$id/zip > "$zipFile"
            # Expect exactly one XML per shard; unzip (strip paths) into destination
            unzip -j "$zipFile" -d all-host-reports >/dev/null
            rm "$zipFile"
          done

          ls -l all-host-reports

          if [ "$missing" = 1 ]; then
            echo "One or more shard artifacts were missing" >&2
            exit 1
          fi

          count=$(ls all-host-reports/*.xml 2>/dev/null | wc -l | tr -d ' ')

          if [ "$count" -ne "${HOST_SHARD_TOTAL}" ]; then
            echo "Expected ${HOST_SHARD_TOTAL} shard reports, found $count" >&2
            exit 1
          fi

      - name: Merge reports
        run: npx junit-report-merger host.xml "./all-host-reports/*.xml"

      # host.xml has classname="Chrome 134.0", change to classname="Chrome" to prevent false test removal/addition warnings
      - name: Remove Chrome version number
        run: sed -i -E 's/classname="Chrome [^"]*"/classname="Chrome"/' host.xml

      - name: Upload merged report
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # 4.6.1
        if: always()
        with:
          name: host-test-report-merged
          path: host.xml
          retention-days: 30

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@170bf24d20d201b842d7a52403b73ed297e6645b # 2.18.0
        if: always()
        with:
          junit_files: host.xml
          check_name: Host Test Results
