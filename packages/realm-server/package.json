{
  "name": "@cardstack/realm-server",
  "version": "0.0.0",
  "license": "MIT",
  "devDependencies": {
    "@aws-crypto/sha256-js": "^5.2.0",
    "@cardstack/billing": "workspace:*",
    "@cardstack/boxel-icons": "workspace:*",
    "@cardstack/boxel-ui": "workspace:*",
    "@cardstack/postgres": "workspace:*",
    "@cardstack/runtime-common": "workspace:*",
    "@cardstack/eslint-plugin-boxel": "workspace:*",
    "@koa/cors": "^4.0.0",
    "@koa/router": "^12.0.0",
    "@sentry/node": "^8.31.0",
    "@types/flat": "^5.0.5",
    "@types/fs-extra": "^9.0.13",
    "@types/js-yaml": "^4.0.9",
    "@types/jsdom": "^21.1.1",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/koa": "^2.13.5",
    "@types/koa-compose": "^3.2.5",
    "@types/koa__cors": "^4.0.0",
    "@types/koa__router": "^12.0.0",
    "@types/lodash": "^4.14.182",
    "@types/mime-types": "^2.1.1",
    "@types/node": "^18.18.5",
    "@types/pluralize": "^0.0.30",
    "@types/qs": "^6.9.17",
    "@types/qunit": "catalog:",
    "@types/sane": "^2.0.1",
    "@types/sinon": "^17.0.3",
    "@types/supertest": "^2.0.12",
    "@types/tmp": "^0.2.3",
    "@types/uuid": "^9.0.8",
    "@types/yargs": "^17.0.10",
    "content-tag": "^4.0.0",
    "concurrently": "^8.0.1",
    "date-fns": "^2.28.0",
    "decorator-transforms": "^2.3.0",
    "ember-eslint-parser": "0.5.9",
    "eslint-plugin-qunit": "catalog:",
    "ethers": "^6.6.2",
    "fastboot": "^4.1.0",
    "flat": "^5.0.2",
    "fs-extra": "^10.1.0",
    "glob": "^11.0.1",
    "http-server": "^14.1.1",
    "js-yaml": "^4.1.0",
    "jsdom": "^21.1.1",
    "jsonwebtoken": "^9.0.2",
    "koa": "^2.14.1",
    "koa-compose": "^4.1.0",
    "koa-proxies": "^0.12.3",
    "lodash": "^4.17.21",
    "loglevel": "^1.8.1",
    "mime-types": "^2.1.35",
    "npm-run-all": "^4.1.5",
    "pluralize": "^8.0.0",
    "prettier": "catalog:",
    "prettier-plugin-ember-template-tag": "catalog:",
    "qs": "^6.13.0",
    "qunit": "catalog:",
    "sane": "^5.0.1",
    "sinon": "^19.0.2",
    "start-server-and-test": "^1.14.0",
    "stripe": "^17.2.1",
    "supertest": "^6.2.4",
    "testem": "^3.10.1",
    "tmp": "^0.2.1",
    "ts-node": "^10.9.1",
    "typescript": "~5.1.6",
    "typescript-memoize": "^1.1.1",
    "uuid": "^9.0.1",
    "wait-for-localhost-cli": "^3.2.0",
    "yaml": "^2.5.1",
    "yargs": "^17.5.1"
  },
  "scripts": {
    "test": "./scripts/remove-test-dbs.sh; LOG_LEVELS=\"pg-adapter=warn,realm:requests=warn,current-run=error${LOG_LEVELS:+,}${LOG_LEVELS}\" NODE_NO_WARNINGS=1 PGPORT=5435 STRIPE_WEBHOOK_SECRET=stripe-webhook-secret STRIPE_API_KEY=stripe-api-key qunit --require ts-node/register/transpile-only tests/index.ts",
    "test-module": "./scripts/remove-test-dbs.sh; LOG_LEVELS=\"pg-adapter=warn,realm:requests=warn,current-run=error${LOG_LEVELS:+,}${LOG_LEVELS}\" NODE_NO_WARNINGS=1 PGPORT=5435 STRIPE_WEBHOOK_SECRET=stripe-webhook-secret STRIPE_API_KEY=stripe-api-key qunit --require ts-node/register/transpile-only --module ${TEST_MODULE} tests/index.ts",
    "start:matrix": "cd ../matrix && pnpm assert-synapse-running",
    "start:smtp": "cd ../matrix && pnpm assert-smtp-running",
    "start:pg": "./scripts/start-pg.sh",
    "stop:pg": "./scripts/stop-pg.sh",
    "test:wait-for-servers": "NODE_NO_WARNINGS=1 start-server-and-test 'pnpm run wait' 'http-get://localhost:4201/base/_readiness-check?acceptHeader=application%2Fvnd.api%2Bjson' 'pnpm run wait' 'http-get://localhost:4202/node-test/_readiness-check?acceptHeader=application%2Fvnd.api%2Bjson|http://localhost:8008|http://localhost:5001' 'test-module'",
    "setup:base-in-deployment": "mkdir -p /persistent/base && rsync --dry-run --itemize-changes --size-only --recursive --delete ../base/. /persistent/base/ && rsync --size-only --recursive --delete ../base/. /persistent/base/",
    "setup:experiments-in-deployment": "mkdir -p /persistent/experiments && rsync --dry-run --itemize-changes --size-only --recursive ../experiments-realm/. /persistent/experiments/ && rsync --size-only --recursive ../experiments-realm/. /persistent/experiments/",
    "setup:seed-in-deployment": "mkdir -p /persistent/seed && rsync --dry-run --itemize-changes --size-only --recursive --delete ../seed-realm/. /persistent/seed/ && rsync --size-only --recursive --delete ../seed-realm/. /persistent/seed/",
    "setup:catalog-in-deployment": "mkdir -p /persistent/catalog && rsync --dry-run --itemize-changes --size-only --recursive --delete ../catalog-realm/. /persistent/catalog/ && rsync --size-only --recursive --delete ../catalog-realm/. /persistent/catalog/",
    "setup:catalog-dev-in-deployment": "mkdir -p /persistent/catalog && rsync --dry-run --itemize-changes --size-only --recursive --delete ../catalog-realm-dev/. /persistent/catalog/ && rsync --size-only --recursive --delete ../catalog-realm-dev/. /persistent/catalog/",
    "start": "PGPORT=5435 NODE_NO_WARNINGS=1 ts-node --transpileOnly main",
    "start:base": "./scripts/start-base.sh --workerManagerPort=4213",
    "start:test-realms": "./scripts/start-test-realms.sh --workerManagerPort=4211",
    "start:all": "./scripts/start-all.sh",
    "start:without-matrix": "./scripts/start-without-matrix.sh",
    "start:staging": "./scripts/start-staging.sh",
    "start:development": "./scripts/start-development.sh --workerManagerPort=4210",
    "start:production": "./scripts/start-production.sh",
    "start:worker-development": "./scripts/start-worker-development.sh",
    "start:worker-base": "./scripts/start-worker-base.sh",
    "start:worker-test": "./scripts/start-worker-test.sh",
    "start:worker-staging": "./scripts/start-worker-staging.sh",
    "start:worker-production": "./scripts/start-worker-production.sh",
    "start:services-for-matrix-tests": "./scripts/start-services-for-matrix-tests.sh",
    "wait": "sleep 10000000",
    "lint": "concurrently \"pnpm:lint:*(!fix)\" --names \"lint:\"",
    "lint:fix": "concurrently \"pnpm:lint:*:fix\" --names \"fix:\"",
    "lint:js": "eslint . --report-unused-disable-directives --cache",
    "lint:js:fix": "eslint . --report-unused-disable-directives --fix",
    "lint:glint": "glint",
    "lint:test-shards": "ts-node --transpileOnly scripts/lint-test-shards.ts",
    "full-reset": "./scripts/full-reset.sh",
    "sync-stripe-products": "NODE_NO_WARNINGS=1 PGDATABASE=boxel PGPORT=5435 ts-node --transpileOnly scripts/sync-stripe-products.ts",
    "stripe": "docker run --rm --add-host=host.docker.internal:host-gateway -it stripe/stripe-cli:latest"
  },
  "volta": {
    "extends": "../../package.json"
  }
}
