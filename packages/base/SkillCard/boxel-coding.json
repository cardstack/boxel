{
  "data": {
    "type": "card",
    "attributes": {
      "instructions": "Boxel is a platform where people can create Cards, which under the hood are built out of glimmer components and Ember.\n\nCards are instances that are created following the blueprint of their card definition. Card definition is in a 1 on multiple gts files where code defines card's logic, behavior, templates, visual representation using templates in different formats, and data relations (using fields). Cards (instances) are materialized in json files (JSON-API documents), where card data is stored: pieces of information that have data that relate to fields in card definition. There can be many card instances for one card definition. If you receive tools and functions that manipulate card data, and the user wants you to make changes to cards, it is urgent for you to think whether the change relates to card definition, specific card instance, or both, and select the appropriate tool.   \n\nCards are independent linkable items that get an ID. Fields are contained within cards, so sometimes a user wants a custom field, but usually it's creating a card (derived from CardDef).\n\nUse glimmer templating and typescript for the code. Remember the limitations of logic within glimmer templating code. Basic interaction for editing fields is handled for you by boxel, you don't need to create that (e.g. StringField has an edit template that allows a user to edit the data). Computed fields can support more complex work, and update automatically for you. Interaction (button clicks, filtering on user typed content) may require glimmer & ember functionality (see action and tracked in the example below).\n\n## Card Definition:\n\nCards you create have four templates. If you do not specify them they are automatically created for you, but users often want custom templates. Each template is a glimmer template and can use ember functionality. These are specified as static in the card definition:\n\n```gts\nimport {\n  contains,\n  containsMany,\n  linksToMany,\n  field,\n  CardDef,\n  Component,\n} from 'https://cardstack.com/base/card-api';\n\n// Fields included in Base realm\nimport StringField from 'https://cardstack.com/base/string';\nimport NumberField from 'https://cardstack.com/base/number';\nimport MarkdownField from 'https://cardstack.com/base/markdown';\nimport BooleanField from 'https://cardstack.com/base/boolean';\nimport DateField from 'https://cardstack.com/base/date';\nimport DateRangeField from 'https://cardstack.com/base/date-range';\nimport DatetimeField from 'https://cardstack.com/base/datetime';\nimport TextAreaField from 'https://cardstack.com/base/text-area';\nimport BigIntegerField from 'https://cardstack.com/base/big-integer';\nimport CodeRefField from 'https://cardstack.com/base/code-ref';\nimport EthereumAddressField from 'https://cardstack.com/base/ethereum-address';\nimport PositionedCardField from 'https://cardstack.com/base/positioned-card';\nimport AddressField from 'https://cardstack.com/base/address';\nimport Base64ImageField from 'https://cardstack.com/base/base64-image';\nimport ColorField from 'https://cardstack.com/base/color';\nimport CoordinateField from 'https://cardstack.com/base/coordinate';\nimport { CountryField } from 'https://cardstack.com/base/country';\nimport EmailField from 'https://cardstack.com/base/email';\nimport PercentageField from 'https://cardstack.com/base/percentage';\nimport PhoneNumberField from 'https://cardstack.com/base/phone-number';\nimport UrlField from 'https://cardstack.com/base/url';\nimport WebsiteField from 'https://cardstack.com/base/website';\n\n// Important, this is the tracked decorator\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { fn } from '@ember/helper';\nimport { on } from '@ember/modifier';\n\n// These helper functions must be imported to use.  Others must be written directly.\nimport { and, bool, eq, gt, lt, not, or, add, subtract } from '@cardstack/boxel-ui/helpers';\n\n// @cardstack/boxel-icons has icons from Lucide and Tabler\nimport userSquareRounded from '@cardstack/boxel-icons/user-square-rounded`;\n\nexport class MyCustomCard  extends CardDef {\n  static displayName = 'BoxelBuddyGuestList';\n  static icon = userSquareRounded;\n  static prefersWideFormat = false; // set to true for cards that are \"apps\" or \"dashboards\" so they get more space to lay out in Interact submode\n\n  // linksTo and linksToMany \n  @field linkedData = linksToMany(() => AnotherCard);\n\n  // A field that is computed from other data in the card\n @field computedData = contains(NumberField, {\n   computeVia: function (this: MyCustomCard) {\n     // implementation logic here\n     return 1;\n   },\n });\n \n  // Isolated templates are used when items are viewed on their own. Default to the isolated template\n  static isolated = class Isolated extends Component<typeof this> {\n    // Use tracked and action decorators to be able to use interactivity in the templated\n  @tracked  trackedValue = [];\n  @action interactivity(event: InputEvent) {}\n// Glimmer template goes here, make sure the style tag is at the top level of the template\n  <template>\n    <style scoped>\n    </style>\n  </template>\n};\n // Embedded is when they appear in other cards\n  static embedded = class Embedded extends Component<typeof this> {\n    <template>\n      <style scoped>\n      </style>\n    </template>\n};\n\n // Fitted templates should be responsive to the size of the container they appear in\n static fitted = class Fitted extends Component<typeof this> {\n    <template>\n      <style scoped>\n      </style>\n    </template>\n  };\n\n// Edit is for the user editing the data. Use @fields let the field render itself\n  static edit = class Edit extends Component<typeof this> {\n    <template>\n      <@fields.fieldName />\n      <style scoped>\n      </style>\n    </template>\n  };\n}\n```\n\n`<@fields.foo />` in a template lets the `foo` field render itself. Boxel calls this a delegated render.\n\n`@model.foo gets the value of `foo` out of the field.\n\n### Naming Conventions\n\nField Definitions (extending from `FieldDef`) should have a suffix of \"Field\".\n\nCard definitions (extending from `CardDef`) should not have a suffix.\n\n```gts\nclass BloodPressureField extends FieldDef {\n  @field systolicPressure = contains(NumberField);\n @field diastolicPressure = contains(NumberField);\n}\n\nclass MedicalCheckup extends CardDef {\n  @field patient = linksTo(Person);\n  @field bloodPressure = contains(BloodPressureField);\n}\n```\n\n## Important:\n\nIt is extremely important you use the following imports for interactivity:\n\n```gts\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { fn, get } from '@ember/helper';\nimport { on } from '@ember/modifier';\n```\n\nRemember to define a field the following syntax is used:\n\n```gts\n  @field fieldname = contains(FieldType);\n  @field fieldname = containsMany(FieldType);\n```\n\nAnd for linking to other cards:\n\n```\n  @field fieldname = linksTo(CardType);\n  @field fieldname = linksToMany(CardType);\n```\n\nWhen defining fields with a field type that is only defined later in the file, use a \"thunk\":\n\n```gts\n  class Foo extends CardDef {\n    @field bar = linksTo(() => Bar);\n  }\n\n  class Bar extends CardDef {\n    // ...\n  }\n```\n\n\n## Templating\n\nWhen writing the glimmer template, ensure that the style tags appear within the template tag, as the last item in them. You should use useful class names and a sensible structure as you build this. Use single quotes for the class names.\n\nWhen writing this, take care to remember ember and glimmer oddities. \n\nValues from the model can be directly inserted with\n\n```hbs\n{{@model.fieldName}}\n```\n\nand you can delegate rendering to the field with\n\n```hbs\n<@fields.fieldName />\n```\n\nAccessing a list by index should use this format:\n\n```hbs\n{{(get @model.fieldWithAList index)}}\n```\n\nYou must be careful with the templates, remember glimmer rules. Do not put a dollar sign ($) directly in front of the brackets.\n\nIMPORTANT: <style> tag must be at the root of the <template>, otherwise the app will break. It must not be nested.\n\n#### Modifiers\n\nA modifier in glimmer is invoked on an element like this:\n\n```hbs\n  <div {{this.setupSomething}}> ... </div>\n```\n\nand the Typescript portion of the card definitiion would define the modifier implemention like this:\n\n```gts\nimport { modifier } from 'ember-modifier';\n...\nsetupSomething = modifier((element: HTMLDivElement) => {\n   // code here\n});\n```\n\n#### Helpers\n\nHelper functions are JavaScript functions that you can call from your template. It's possible to use plain functions for helpers\nand modifiers. A plain helper function can be \"local\" to or defined on a component.\n\n```gts\nexport default class Person extends CardDef {\n  @field username = contains(StringField);\n  static embedded = class Embedded extends Component<typeof this> {\n    substring = (string, start, end) => string.substring(start, end);\n    <template>\n      <Avatar @initial={{this.substring @model.username 0 1}} />\n    </template>\n  };\n}\n```\n\nHelpers default to using positional arguments, but sometimes it can make the corresponding\nsyntax `{{substring @username 0 1}}` a little hard to read. We can use named arguments to\nsolve this problem.\n\n```gts\nexport default class Person extends CardDef {\n  @field username = contains(StringField);\n  static embedded = class Embedded extends Component<typeof this> {\n    substring = (string, options) => string.substring(options.start, options.end);\n    <template>\n      <Avatar @initial={{this.substring @model.username start=0 end=1}} />\n    </template>\n  };\n}\n```\n\nSometimes, you might see helpers invoked by placing them inside parentheses, (). This means that a Helper is being used inside of another Helper. This is referred to as a \"nested\" Helper Invocation. Parentheses must be used because curly braces {{}} cannot be nested.\n\n```hbs\n{{this.sum (this.multiply 2 4) 2}}\n```\n\nIn this example, we are using a helper to multiply 2 and 4 before passing the value into {{sum}}.\n\n#### Formatting dates and times\n\nOutputting date fields directly in templates gives ugly results. Instead, you should\nformat them based on the use case. Here is an example:\n\n```gts\nimport { dayjsFormat } from \"@cardstack/boxel-ui/helpers\";\n\n<template>\n  {{dayjsFormat}} \n  // current date in ISO8601, without fraction seconds e.g. '2025-04-02T08:02:17-05:00'\n\n  {{dayjsFormat @model.createdAt '[YYYYescape] YYYY-MM-DDTHH:mm:ssZ[Z]'}}\n  // 'YYYYescape 2019-01-25T00:00:00-02:00Z'\n\n  {{dayjsFormat @model.createdAt 'DD/MM/YYYY'}} // '25/01/2019'\n\n  {{dayjsFormat @model.createdAt 'MMM DD, YYYY'}} // 'Jan 25, 2019'\n</template>\n```\n\nThe format strings are those used by the day.js library.\n\n## Styling\n\nUnless otherwise instructed, use a modern but stylish theme. \n\nCards are shown by default within a rounded corner card-like UI. You should not add outer divs to the template that give a border as that will look bad. You should however have padding so that the elements are not touching the edge.\n\n## Third-Party NPM Packages\n\nYou can import npm packages via URL provided they are in esm format. For example, to use HighCharts:\n\n```\nimport HighCharts from 'https://cdn.jsdelivr.net/npm/highcharts/+esm';\n...\nlet chart = new HighCharts.Chart(...);\n```\n\n## Be Collaborative\n\nYou can ask followups\n\nYou can propose new/improved data structures\n\n## Card Instance JSON\n\nInstances of cards are persisted as JSON-API documents. `contains` fields are attributes. `linksTo` fields are relationships. The reference to the card definition class is stored in meta. For example:\n\n```json\n{\n  \"data\": {\n    \"type\": \"card\",\n    \"attributes\": {\n      \"headline\": \"The Ultimate Guide to Remote Work\",\n      \"slug\": \"ultimate-guide-remote-work\",\n      \"body\": \"Remote work has revolutionized the traditional workplace, offering flexibility and autonomy like never before. Whether you're a freelancer, an entrepreneur, or part of a company embracing flexible work arrangements, understanding how to make the most of remote work is crucial for success.\\n\\n<h2 id='benefits-of-remote-work'>Benefits of Remote Work</h2>\\n\\n### Flexibility\\n\\nOne of the most significant advantages of remote work is the ability to **work from anywhere**. Whether you prefer the comfort of your home, a bustling coffee shop, or a serene beach, the choice is yours.\\n\\n> \\\"The freedom to choose your workspace can greatly enhance creativity and job satisfaction.\\\" \\n>\\n> — Jane Doe, Remote Work Expert\\n\\n### Increased Productivity\\n\\nWithout the usual office distractions, many remote workers find they can **focus better** and **get more done** in less time.\\n\\n### Improved Work-Life Balance\\n\\nEliminating the daily commute gives you more time for personal activities, helping to reduce stress and improve overall well-being.\\n\\n<figure>\\n<img src=\\\"https://images.unsplash.com/photo-1588196749597-9ff075ee6b5b?w=900&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OHx8cmVtb3RlJTIwd29ya3xlbnwwfHwwfHx8MA%3D%3D\\\" alt=\\\"Work-life balance\\\">\\n<figcaption>Achieving a healthy work-life balance is easier with remote work.</figcaption>\\n</figure>\\n\",\n      \"publishDate\": \"2024-11-05T20:00:00.000Z\",\n      \"featuredImage\": {\n        \"imageUrl\": \"https://images.unsplash.com/photo-1614624532983-4ce03382d63d?q=80&w=3131&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n        \"credit\": \"Image by Unsplash\",\n        \"caption\": \"Success in remote work is achievable with the right approach.\",\n        \"altText\": \"Desktop setup with laptop, monitor, keyboard and mouse, phone, headphones, and a cup of coffee\",\n        \"size\": \"actual\",\n        \"height\": null,\n        \"width\": null\n      },\n      \"description\": \"In today's digital age, remote work has transformed from a luxury to a necessity. This comprehensive guide will help you navigate the world of remote work, offering tips, tools, and best practices for success.\",\n      \"thumbnailURL\": \"https://images.unsplash.com/photo-1614624532983-4ce03382d63d?q=80&w=3131&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n    },\n    \"relationships\": {\n      \"authors.0\": {\n        \"links\": {\n          \"self\": \"../Author/6ed40546-fd9e-4b5e-bc4c-25499259df57\"\n        },\n      \"authors.1\": {\n        \"links\": {\n          \"self\": \"../Author/03f68ddd-bfdf-4b8f-b891-ade922b0279c\"\n        }\n      },\n      \"category\": {\n        \"links\": {\n          \"self\": \"../BlogCategory/urban-work\"\n        }\n      },\n    },\n    \"meta\": {\n      \"adoptsFrom\": {\n        \"module\": \"../blog-post\",\n        \"name\": \"BlogPost\"\n      }\n    }\n  }\n}\n```\n\n## Real-World Code Example\n\n```gts\nimport {\n  CardDef,\n  field,\n  contains,\n  linksTo,\n  Component,\n  getCardMeta,\n  linksToMany,\n} from 'https://cardstack.com/base/card-api';\nimport DatetimeField from 'https://cardstack.com/base/datetime';\nimport StringField from 'https://cardstack.com/base/string';\nimport MarkdownField from 'https://cardstack.com/base/markdown';\nimport NumberField from 'https://cardstack.com/base/number';\n\nimport { markdownToHtml } from '@cardstack/runtime-common';\nimport CalendarCog from '@cardstack/boxel-icons/calendar-cog';\nimport BlogIcon from '@cardstack/boxel-icons/notebook';\n\nimport { setBackgroundImage } from './components/layout';\n\nimport { Author } from './author';\nimport { FeaturedImageField } from './fields/featured-image';\nimport { formatDatetime, BlogApp as BlogAppCard } from './blog-app';\nimport { BlogCategory, categoryStyle } from './blog-category';\nimport { User } from './user';\n\nclass EmbeddedTemplate extends Component<typeof BlogPost> {\n  <template>\n    <article class='embedded-blog-post'>\n      <div class='thumbnail' style={{setBackgroundImage @model.thumbnailURL}} />\n      {{#if @model.categories.length}}\n        <div class='categories'>\n          {{#each @model.categories as |category|}}\n            <div class='category' style={{categoryStyle category}}>\n              {{category.shortName}}\n            </div>\n          {{/each}}\n        </div>\n      {{/if}}\n      <h3 class='title'><@fields.title /></h3>\n      <p class='description'>{{@model.description}}</p>\n      <span class='byline'>\n        {{@model.formattedAuthors}}\n      </span>\n      {{#if @model.datePublishedIsoTimestamp}}\n        <time class='date' timestamp={{@model.datePublishedIsoTimestamp}}>\n          {{@model.formattedDatePublished}}\n        </time>\n      {{/if}}\n    </article>\n    <style scoped>\n      .embedded-blog-post {\n        width: 100%;\n        height: 100%;\n        display: grid;\n        grid-template:\n          'img categories categories' max-content\n          'img title title' max-content\n          'img desc desc' max-content\n          'img byline date' 1fr / 40% 1fr max-content;\n        gap: var(--boxel-sp-xs);\n        padding-right: var(--boxel-sp-xl);\n        overflow: hidden;\n      }\n      .thumbnail {\n        grid-area: img;\n        background-color: var(--boxel-200);\n        background-position: center;\n        background-size: cover;\n        background-repeat: no-repeat;\n        margin-right: var(--boxel-sp-lg);\n      }\n      .title {\n        grid-area: title;\n        margin: var(--boxel-sp-xxs) 0 0;\n        font-size: var(--boxel-font-size-lg);\n        line-height: calc(30 / 22);\n        letter-spacing: var(--boxel-lsp-xs);\n      }\n      .description {\n        grid-area: desc;\n        margin: 0;\n        font-size: var(--boxel-font-size);\n        line-height: calc(22 / 16);\n        letter-spacing: var(--boxel-lsp-xs);\n      }\n      .byline {\n        grid-area: byline;\n        align-self: end;\n        width: auto;\n        height: auto;\n        text-wrap: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n      }\n      .date {\n        grid-area: date;\n        align-self: end;\n        justify-self: end;\n      }\n      .byline,\n      .date {\n        margin-bottom: var(--boxel-sp-xs);\n        font: 500 var(--boxel-font-sm);\n        letter-spacing: var(--boxel-lsp-xs);\n        text-wrap: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n      }\n\n      .categories {\n        margin-top: var(--boxel-sp);\n        display: flex;\n        flex-wrap: wrap;\n        gap: var(--boxel-sp-xxxs);\n      }\n\n      .category {\n        display: inline-block;\n        padding: 3px var(--boxel-sp-xxxs);\n        border-radius: var(--boxel-border-radius-sm);\n        font: 500 var(--boxel-font-xs);\n        letter-spacing: var(--boxel-lsp-sm);\n      }\n    </style>\n  </template>\n}\n\nclass FittedTemplate extends Component<typeof BlogPost> {\n  <template>\n    <article class='fitted-blog-post'>\n      <div class='thumbnail' style={{setBackgroundImage @model.thumbnailURL}} />\n      <div class='categories'>\n        {{#each @model.categories as |category|}}\n          <div class='category' style={{categoryStyle category}}>\n            {{category.shortName}}\n          </div>\n        {{/each}}\n      </div>\n      <div class='content'>\n        <h3 class='title'><@fields.title /></h3>\n        <p class='description'>{{@model.description}}</p>\n        {{#if @model.formattedAuthors}}\n          <span class='byline'>{{@model.formattedAuthors}}</span>\n        {{/if}}\n        {{#if @model.datePublishedIsoTimestamp}}\n          <time class='date' timestamp={{@model.datePublishedIsoTimestamp}}>\n            {{@model.formattedDatePublished}}\n          </time>\n        {{/if}}\n      </div>\n    </article>\n    <style scoped>\n      .fitted-blog-post {\n        width: 100%;\n        height: 100%;\n        min-width: 100px;\n        min-height: 29px;\n        display: grid;\n        overflow: hidden;\n      }\n      .thumbnail {\n        grid-area: img;\n        background-color: var(--boxel-200);\n        background-position: center;\n        background-size: cover;\n        background-repeat: no-repeat;\n      }\n      .content {\n        grid-area: content;\n        gap: var(--boxel-sp-4xs);\n        padding: var(--boxel-sp-xs);\n        overflow: hidden;\n      }\n      .title {\n        grid-area: title;\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 2;\n        overflow: hidden;\n        margin: 0;\n\n        font: 600 var(--boxel-font-sm);\n        letter-spacing: var(--boxel-lsp-sm);\n        line-height: 1.3;\n      }\n      .description {\n        grid-area: desc;\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 3;\n        overflow: hidden;\n        margin: 0;\n        font: var(--boxel-font-xs);\n        letter-spacing: var(--boxel-lsp-sm);\n      }\n      .byline {\n        grid-area: byline;\n        display: inline-block;\n        text-wrap: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n      }\n      .date {\n        grid-area: date;\n        text-wrap: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n      }\n      .byline,\n      .date {\n        font: 500 var(--boxel-font-xs);\n        letter-spacing: var(--boxel-lsp-sm);\n      }\n\n      .categories {\n        margin-top: -27px;\n        height: 20px;\n        margin-left: 7px;\n        display: none;\n        overflow: hidden;\n      }\n\n      .category {\n        height: 20px;\n        padding: 3px 4px;\n        border-radius: var(--boxel-border-radius-sm);\n        display: inline-block;\n        font: 500 var(--boxel-font-xs);\n        letter-spacing: var(--boxel-lsp-sm);\n        margin-right: var(--boxel-sp-xxxs);\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      @container fitted-card ((aspect-ratio <= 1.0) and (226px <= height)) {\n        .fitted-blog-post {\n          grid-template:\n            'img' 42%\n            'categories' max-content\n            'content' 1fr / 1fr;\n        }\n        .categories {\n          display: flex;\n        }\n        .content {\n          display: grid;\n          grid-template:\n            'title title' max-content\n            'desc desc' max-content\n            'byline date' 1fr / 1fr max-content;\n        }\n        .byline,\n        .date {\n          align-self: end;\n        }\n        .date {\n          justify-self: end;\n        }\n      }\n\n      /* Aspect ratio < 1.0 (Vertical card) */\n      @container fitted-card (aspect-ratio <= 1.0) and (224px <= height < 226px) {\n        .fitted-blog-post {\n          grid-template:\n            'img' 92px\n            'categories' max-content\n            'content' 1fr / 1fr;\n        }\n        .categories {\n          display: flex;\n        }\n\n        .content {\n          display: grid;\n          grid-template:\n            'title' max-content\n            'byline' max-content\n            'date' 1fr / 1fr;\n        }\n        .description {\n          display: none;\n        }\n        .date {\n          align-self: end;\n        }\n      }\n\n      @container fitted-card (aspect-ratio <= 1.0) and (180px <= height < 224px) {\n        .fitted-blog-post {\n          grid-template:\n            'img' 92px\n            'categories' max-content\n            'content' 1fr / 1fr;\n        }\n        .categories {\n          display: flex;\n        }\n        .content {\n          display: grid;\n          grid-template:\n            'title' max-content\n            'date' 1fr / 1fr;\n        }\n        .title {\n          -webkit-line-clamp: 3;\n        }\n        .description,\n        .byline {\n          display: none;\n        }\n        .date {\n          align-self: end;\n        }\n      }\n\n      @container fitted-card ((aspect-ratio <= 1.0) and (height < 180px) ) {\n        .title {\n          font-size: var(--boxel-font-size-xs);\n        }\n      }\n\n      @container fitted-card (aspect-ratio <= 1.0) and (148px <= height < 180px) {\n        .fitted-blog-post {\n          grid-template:\n            'img' 80px\n            'content' 1fr / 1fr;\n        }\n        .content {\n          display: grid;\n          grid-template:\n            'title' max-content\n            'date' 1fr / 1fr;\n        }\n        .title {\n          -webkit-line-clamp: 2;\n        }\n        .description,\n        .byline {\n          display: none;\n        }\n        .date {\n          align-self: end;\n        }\n      }\n\n      @container fitted-card (aspect-ratio <= 1.0) and (128px <= height < 148px) {\n        .fitted-blog-post {\n          grid-template:\n            'img' 68px\n            'categories' max-content\n            'content' 1fr / 1fr;\n        }\n        .content {\n          display: block;\n        }\n        .title {\n          -webkit-line-clamp: 3;\n        }\n        .description,\n        .byline,\n        .date {\n          display: none;\n        }\n      }\n\n      @container fitted-card (aspect-ratio <= 1.0) and (118px <= height < 128px) {\n        .fitted-blog-post {\n          grid-template:\n            'img' 57px\n            'content' 1fr / 1fr;\n        }\n        .title {\n          -webkit-line-clamp: 3;\n        }\n        .description,\n        .byline,\n        .date {\n          display: none;\n        }\n      }\n\n      @container fitted-card ((aspect-ratio <= 1.0) and (400px <= height) and (226px < width)) {\n        .title {\n          font-size: var(--boxel-font-size);\n        }\n      }\n\n      @container fitted-card ((aspect-ratio <= 1.0) and (400px <= height)) {\n        .fitted-blog-post {\n          grid-template:\n            'img' 55%\n            'categories' max-content\n            'content' 1fr / 1fr;\n        }\n        .categories {\n          display: flex;\n        }\n        .content {\n          display: grid;\n          grid-template:\n            'title' max-content\n            'byline' max-content\n            'desc' max-content\n            'date' 1fr / 1fr;\n        }\n        .description {\n          -webkit-line-clamp: 5;\n          margin-top: var(--boxel-sp-xxxs);\n        }\n        .date {\n          align-self: end;\n        }\n      }\n\n      /* 1.0 < Aspect ratio (Horizontal card) */\n      @container fitted-card ((1.0 < aspect-ratio) and (180px <= height)) {\n        .fitted-blog-post {\n          grid-template: 'img content' 1fr / 40% 1fr;\n        }\n        .content {\n          display: grid;\n          grid-template:\n            'title' max-content\n            'desc' max-content\n            'byline' 1fr\n            'date' max-content / 1fr;\n          gap: var(--boxel-sp-5xs);\n        }\n        .title {\n          -webkit-line-clamp: 2;\n        }\n        .description {\n          -webkit-line-clamp: 3;\n          margin-top: var(--boxel-sp-xxxs);\n        }\n        .byline {\n          align-self: end;\n        }\n      }\n\n      @container fitted-card ((1.0 < aspect-ratio) and (151px <= height < 180px)) {\n        .fitted-blog-post {\n          grid-template: 'img content' 1fr / 34% 1fr;\n        }\n        .content {\n          display: grid;\n          grid-template:\n            'title' max-content\n            'byline' max-content\n            'date' 1fr / 1fr;\n        }\n        .title {\n          -webkit-line-clamp: 2;\n        }\n        .description {\n          display: none;\n        }\n        .date {\n          align-self: end;\n        }\n      }\n\n      @container fitted-card ((1.0 < aspect-ratio) and (115px <= height <= 150px)) {\n        .fitted-blog-post {\n          grid-template: 'img content' 1fr / 26% 1fr;\n        }\n        .content {\n          display: grid;\n          grid-template:\n            'title' max-content\n            'byline' 1fr\n            'date' max-content / 1fr;\n          gap: var(--boxel-sp-5xs);\n        }\n        .title {\n          -webkit-line-clamp: 2;\n        }\n        .description {\n          display: none;\n        }\n        .byline {\n          align-self: end;\n          margin-top: var(--boxel-sp-xxxs);\n        }\n      }\n\n      @container fitted-card ((1.0 < aspect-ratio) and (78px <= height <= 114px)) {\n        .fitted-blog-post {\n          grid-template: 'img content' 1fr / 35% 1fr;\n        }\n        .title {\n          -webkit-line-clamp: 3;\n          font-size: var(--boxel-font-size-xs);\n        }\n        .description,\n        .byline,\n        .date {\n          display: none;\n        }\n      }\n\n      @container fitted-card ((1.0 < aspect-ratio) and (500px <= width) and (58px <= height <= 77px)) {\n        .fitted-blog-post {\n          grid-template: 'img content' 1fr / max-content 1fr;\n          align-items: center;\n          gap: var(--boxel-sp-xs);\n          padding: var(--boxel-sp-xxs);\n        }\n        .thumbnail {\n          width: 45px;\n          height: 45px;\n          border-radius: 5px;\n        }\n        .content {\n          padding: 0;\n        }\n        .title {\n          -webkit-line-clamp: 1;\n          text-wrap: nowrap;\n        }\n        .description,\n        .byline,\n        .date {\n          display: none;\n        }\n      }\n\n      @container fitted-card ((1.0 < aspect-ratio) and (226px <= width <= 499px) and (58px <= height <= 77px)) {\n        .fitted-blog-post {\n          grid-template: 'img content' 1fr / max-content 1fr;\n          align-items: center;\n          gap: var(--boxel-sp-xs);\n          padding: var(--boxel-sp-xxs);\n        }\n        .thumbnail {\n          width: 45px;\n          height: 45px;\n          border-radius: 5px;\n        }\n        .content {\n          padding: 0;\n        }\n        .title {\n          -webkit-line-clamp: 2;\n        }\n        .description,\n        .byline,\n        .date {\n          display: none;\n        }\n      }\n\n      @container fitted-card ((1.0 < aspect-ratio) and (width <= 225px) and (58px <= height <= 77px)) {\n        .fitted-blog-post {\n          grid-template: 'content' 1fr / 1fr;\n          align-items: center;\n          gap: var(--boxel-sp-xs);\n          padding: var(--boxel-sp-xxs);\n        }\n        .thumbnail,\n        .description,\n        .byline,\n        .date {\n          display: none;\n        }\n        .content {\n          padding: 0;\n        }\n        .title {\n          -webkit-line-clamp: 2;\n          font-size: var(--boxel-font-size-xs);\n        }\n      }\n\n      @container fitted-card ((1.0 < aspect-ratio) and (height <= 57px)) {\n        .fitted-blog-post {\n          grid-template: 'content' 1fr / 1fr;\n          align-items: center;\n          padding: var(--boxel-sp-xxxs);\n        }\n        .thumbnail,\n        .description,\n        .byline,\n        .date {\n          display: none;\n        }\n        .content {\n          padding: 0;\n        }\n        .title {\n          -webkit-line-clamp: 2;\n          font-size: 600 var(--boxel-font-size-xs);\n        }\n      }\n    </style>\n  </template>\n}\n\nclass Status extends StringField {\n  static displayName = 'Status';\n  static icon = CalendarCog;\n}\n\nexport class BlogPost extends CardDef {\n  static displayName = 'Blog Post';\n  static icon = BlogIcon;\n  @field headline = contains(StringField);\n  @field title = contains(StringField, {\n    computeVia: function (this: BlogPost) {\n      return this.headline?.length\n        ? this.headline\n        : `Untitled ${this.constructor.displayName}`;\n    },\n  });\n  @field body = contains(MarkdownField);\n  @field authors = linksToMany(Author);\n  @field publishDate = contains(DatetimeField);\n  @field status = contains(Status, {\n    computeVia: function (this: BlogPost) {\n      if (!this.publishDate) {\n        return 'Draft';\n      }\n      if (Date.now() >= Date.parse(String(this.publishDate))) {\n        return 'Published';\n      }\n      return 'Scheduled';\n    },\n  });\n  @field blog = linksTo(BlogAppCard, { isUsed: true });\n  @field featuredImage = contains(FeaturedImageField);\n  @field categories = linksToMany(BlogCategory);\n  @field lastUpdated = contains(DatetimeField, {\n    computeVia: function (this: BlogPost) {\n      let lastModified = getCardMeta(this, 'lastModified');\n      return lastModified ? new Date(lastModified * 1000) : undefined;\n    },\n  });\n  @field wordCount = contains(NumberField, {\n    computeVia: function (this: BlogPost) {\n      if (!this.body) {\n        return 0;\n      }\n      const plainText = markdownToHtml(this.body).replace(\n        /<\\/?[^>]+(>|$)/g,\n        '',\n      );\n      return plainText.trim().split(/\\s+/).length;\n    },\n  });\n  @field editors = linksToMany(User);\n\n  get formattedDatePublished() {\n    if (this.status === 'Published' && this.publishDate) {\n      return formatDatetime(this.publishDate, {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n      });\n    }\n    return undefined;\n  }\n\n  get datePublishedIsoTimestamp() {\n    if (this.status === 'Published' && this.publishDate) {\n      return this.publishDate.toISOString();\n    }\n    return undefined;\n  }\n\n  get formattedLastUpdated() {\n    return this.lastUpdated\n      ? formatDatetime(this.lastUpdated, {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n        })\n      : undefined;\n  }\n\n  get lastUpdatedIsoTimestamp() {\n    return this.lastUpdated ? this.lastUpdated.toISOString() : undefined;\n  }\n\n  get formattedAuthors() {\n    const authors = this.authors ?? [];\n    if (authors.length === 0) return undefined;\n\n    const titles = authors.map((author) => author.title);\n\n    if (titles.length === 2) {\n      return `${titles[0]} and ${titles[1]}`;\n    }\n\n    return titles.length > 2\n      ? `${titles.slice(0, -1).join(', ')}, and ${titles.at(-1)}`\n      : titles[0];\n  }\n\n  static embedded = EmbeddedTemplate;\n  static fitted = FittedTemplate;\n  static isolated = class Isolated extends Component<typeof this> {\n    <template>\n      <article>\n        <header class='article-header'>\n          {{#if @model.blog}}\n            <@fields.blog class='blog' @displayContainer={{false}} />\n          {{/if}}\n          {{#if @model.featuredImage.imageUrl}}\n            <@fields.featuredImage class='featured-image' />\n          {{/if}}\n          {{#if @model.categories.length}}\n            <div class='categories'>\n              {{#each @model.categories as |category|}}\n                <div class='category' style={{categoryStyle category}}>\n                  {{category.shortName}}\n                </div>\n              {{/each}}\n            </div>\n          {{/if}}\n          <h1><@fields.title /></h1>\n          {{#if @model.description}}\n            <p class='description'>\n              <@fields.description />\n            </p>\n          {{/if}}\n          <ul class='info'>\n            {{#if @model.authors.length}}\n              <li class='byline'>\n                {{#each @fields.authors as |AuthorComponent|}}\n                  <AuthorComponent\n                    class='author'\n                    @format='atom'\n                    @displayContainer={{false}}\n                  />\n                {{/each}}\n              </li>\n            {{/if}}\n            {{#if @model.datePublishedIsoTimestamp}}\n              <li class='pub-date'>\n                Published on\n                <time timestamp={{@model.datePublishedIsoTimestamp}}>\n                  {{@model.formattedDatePublished}}\n                </time>\n              </li>\n            {{/if}}\n            {{#if @model.lastUpdatedIsoTimestamp}}\n              <li class='last-updated-date'>\n                Last Updated on\n                <time timestamp={{@model.lastUpdatedIsoTimestamp}}>\n                  {{@model.formattedLastUpdated}}\n                </time>\n              </li>\n            {{/if}}\n          </ul>\n        </header>\n        <@fields.body />\n        {{#if @model.authors.length}}\n          <@fields.authors class='author-embedded-bio' @format='embedded' />\n        {{/if}}\n      </article>\n      <style scoped>\n        @import url('https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap');\n        article {\n          --markdown-font-size: 1rem;\n          --markdown-font-family: var(--blog-post-font-family, 'Lora', serif);\n          --markdown-heading-font-family: var(\n            --blog-post-heading-font-family,\n            'Playfair Display',\n            serif\n          );\n          height: max-content;\n          min-height: 100%;\n          padding: var(--boxel-sp-sm) var(--boxel-sp-xl) var(--boxel-sp-lg);\n          background-color: #fcf9f2;\n          font-family: var(--blog-post-font-family, 'Lora', serif);\n        }\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6 {\n          font-family: var(\n            --blog-post-heading-font-family,\n            'Playfair Display',\n            serif\n          );\n        }\n        h1 {\n          font-size: 2.5rem;\n          font-weight: 600;\n          line-height: 1.25;\n          letter-spacing: normal;\n          margin-bottom: var(--boxel-sp-lg);\n          margin-top: var(--boxel-sp-xl);\n        }\n        .article-header {\n          margin-bottom: var(--boxel-sp-lg);\n        }\n        .featured-image :deep(.image) {\n          border-radius: var(--boxel-border-radius-xl);\n          overflow: hidden;\n        }\n        .blog {\n          background-color: inherit;\n        }\n        .blog + .featured-image {\n          margin-top: var(--boxel-sp-sm);\n        }\n        .description {\n          font-size: 1.25rem;\n          font-style: italic;\n        }\n        .info {\n          display: inline-flex;\n          align-items: center;\n          gap: var(--boxel-sp-xs);\n          flex-wrap: wrap;\n          list-style: none;\n          margin: 0;\n          padding: 0;\n        }\n        .info > li + li {\n          border-left: 1px solid black;\n          padding-left: var(--boxel-sp-xs);\n        }\n        .byline {\n          display: inline-flex;\n          align-items: center;\n          gap: var(--boxel-sp-xs) var(--boxel-sp);\n          flex-wrap: wrap;\n        }\n        .author {\n          display: contents; /* workaround for removing block-levelness of atom format */\n        }\n        .author-embedded-bio {\n          margin-top: var(--boxel-sp-xl);\n        }\n        .categories {\n          margin-top: var(--boxel-sp);\n          display: flex;\n          flex-wrap: wrap;\n          gap: var(--boxel-sp-xxs);\n        }\n        .featured-image + .categories {\n          margin-top: var(--boxel-sp-xl);\n        }\n        .category {\n          display: inline-block;\n          padding: 3px var(--boxel-sp-xxxs);\n          border-radius: var(--boxel-border-radius-sm);\n          font: 500 var(--boxel-font-xs);\n          letter-spacing: var(--boxel-lsp-sm);\n        }\n      </style>\n    </template>\n  };\n}\n```\n\n",
      "commands": [],
      "title": "Boxel Coding",
      "description": null,
      "thumbnailURL": null
    },
    "meta": {
      "adoptsFrom": {
        "module": "https://cardstack.com/base/skill-card",
        "name": "SkillCard"
      }
    }
  }
}
