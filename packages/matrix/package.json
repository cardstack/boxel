{
  "name": "@cardstack/matrix",
  "version": "1.0.0",
  "license": "MIT",
  "devDependencies": {
    "@aws-crypto/sha256-js": "^5.2.0",
    "@cardstack/runtime-common": "workspace:*",
    "@playwright/test": "^1.48.0",
    "@types/fs-extra": "~11.0.4",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/node": "^18.19.39",
    "fs-extra": "~11.3.0",
    "jsonwebtoken": "^9.0.2",
    "start-server-and-test": "^1.14.0",
    "tmp": "^0.2.1",
    "ts-node": "^10.9.2",
    "typescript": "~5.8.3"
  },
  "scripts": {
    "start:synapse": "mkdir -p ./synapse-data/db && SYNAPSE_DATA_DIR=./synapse-data ts-node --transpileOnly ./scripts/synapse.ts start",
    "stop:synapse": "ts-node --transpileOnly ./scripts/synapse.ts stop",
    "assert-synapse-running": "if [ \"`docker ps -f name='boxel-synapse' --format '{{.Names}}'`\" = 'boxel-synapse' ]; then echo 'synapse is already running'; else pnpm run start:synapse; fi",
    "start:smtp": "ts-node --transpileOnly ./scripts/smtp.ts start",
    "stop:smtp": "ts-node --transpileOnly ./scripts/smtp.ts stop",
    "assert-smtp-running": "if [ \"`docker ps -f name='boxel-smtp' --format '{{.Names}}'`\" = 'boxel-smtp' ]; then echo 'SMTP is already running'; else pnpm run start:smtp; fi",
    "start:host-pre-built": "cd ../host && pnpm start --path ./dist",
    "start:admin": "ts-node --transpileOnly ./scripts/admin-console",
    "stop:admin": "docker stop synapse-admin && docker rm synapse-admin",
    "register-bot-user": "MATRIX_USERNAME=aibot MATRIX_PASSWORD=pass ts-node --transpileOnly ./scripts/register-test-user.ts",
    "register-test-user": "MATRIX_USERNAME=user MATRIX_PASSWORD=password ts-node --transpileOnly ./scripts/register-test-user.ts",
    "register-realm-users": "./scripts/register-realm-users.sh",
    "register-test-admin": "MATRIX_IS_ADMIN=TRUE MATRIX_USERNAME=admin MATRIX_PASSWORD=password ts-node --transpileOnly ./scripts/register-test-user.ts",
    "register-test-admin-and-token": "pnpm register-test-admin && ts-node --transpileOnly ./scripts/register-test-token.ts",
    "register-all": "pnpm register-test-admin-and-token && pnpm register-realm-users && pnpm register-bot-user && pnpm register-test-user",
    "test": "./scripts/test.sh",
    "test:group": "./scripts/test.sh",
    "wait": "sleep 10000000",
    "lint": "glint",
    "clean": "rm -rf ./synapse-data"
  },
  "volta": {
    "extends": "../../package.json"
  }
}
