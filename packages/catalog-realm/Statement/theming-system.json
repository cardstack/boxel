{
  "data": {
    "meta": {
      "adoptsFrom": {
        "name": "Statement",
        "module": "../statement"
      }
    },
    "type": "card",
    "attributes": {
      "content": "# Theming System and CSS Variables\n\nBoxel uses CSS custom properties (variables) for theming. When creating fields, use these variables with appropriate fallbacks that match your field's design system.\n\n## Available Theme Variables\n\n### Shadcn Design System Variables\n\n**Colors:**\n- `--foreground`, `--background`\n- `--primary`, `--primary-foreground`\n- `--secondary`, `--secondary-foreground`\n- `--muted`, `--muted-foreground`\n- `--accent`, `--accent-foreground`\n- `--card`, `--card-foreground`\n- `--popover`, `--popover-foreground`\n- `--destructive`, `--destructive-foreground`\n- `--input`, `--ring`, `--border`\n\n**Charts:** `--chart1`, `--chart2`, `--chart3`, `--chart4`, `--chart5`\n\n**Sidebar:**\n- `--sidebar`, `--sidebar-foreground`\n- `--sidebar-primary`, `--sidebar-primary-foreground`\n- `--sidebar-accent`, `--sidebar-accent-foreground`\n- `--sidebar-border`, `--sidebar-ring`\n\n**Typography:** `--font-sans`, `--font-serif`, `--font-mono`, `--tracking-normal`\n\n**Layout:** `--radius`, `--spacing`\n\n**Shadows:** `--shadow2xs`, `--shadow-xs`, `--shadow-sm`, `--shadow`, `--shadow-md`, `--shadow-lg`, `--shadow-xl`, `--shadow2xl`\n\n### Brand Variables\n\n**Brand Colors:**\n- `--brand-primary`, `--brand-secondary`, `--brand-accent`\n- `--brand-neutral`, `--brand-light`, `--brand-dark`\n- `--brand-border`\n\n**Brand Layout:**\n- `--brand-radius`\n- `--brand-spacing`\n\n**Brand Typography:**\n- `--brand-heading-font-family`, `--brand-heading-font-size`, `--brand-heading-font-weight`, `--brand-heading-line-height`\n- `--brand-body-font-family`, `--brand-body-font-size`, `--brand-body-font-weight`, `--brand-body-line-height`\n\n**Brand Logos & Icons:**\n- Primary Mark: `--brand-primary-mark1`, `--brand-primary-mark2`, `--brand-primary-mark-greyscale1`, `--brand-primary-mark-greyscale2`, `--brand-primary-mark-clearance-ratio`, `--brand-primary-mark-min-height`\n- Secondary Mark: `--brand-secondary-mark1`, `--brand-secondary-mark2`, `--brand-secondary-mark-greyscale1`, `--brand-secondary-mark-greyscale2`, `--brand-secondary-mark-clearance-ratio`, `--brand-secondary-mark-min-height`\n- `--brand-social-media-profile-icon`\n\n### Brand to Shadcn Mapping\n\nThe system automatically maps brand variables to shadcn variables:\n\n```css\n--primary: var(--brand-primary);\n--secondary: var(--brand-secondary);\n--muted: var(--brand-neutral);\n--accent: var(--brand-accent);\n--background: var(--brand-light);\n--foreground: var(--brand-dark);\n--border: var(--brand-border);\n--radius: var(--brand-radius);\n--spacing: calc(var(--brand-spacing) / 4);\n```\n\nForeground colors (`--primary-foreground`, `--secondary-foreground`, `--muted-foreground`, `--accent-foreground`) are automatically determined based on contrast using `--brand-light` and `--brand-dark`.\n\n## Usage Pattern\n\n**Always provide fallbacks matching your field's design:**\n\n```gts\nexport class CustomField extends FieldDef {\n  static edit = class Edit extends Component<typeof this> {\n    <template>\n      <input class=\"custom-input\" type=\"text\" />\n      \n      <style scoped>\n        .custom-input {\n          /* Theme variable with design-appropriate fallback */\n          background: var(--input, #f5f5f5);\n          color: var(--foreground, #1a1a1a);\n          border: 1px solid var(--border, #e0e0e0);\n          border-radius: var(--radius, 0.375rem);\n          padding: calc(var(--spacing, 0.25rem) * 2);\n          font-family: var(--font-sans, system-ui, sans-serif);\n        }\n        \n        .custom-input:focus {\n          outline: 2px solid var(--ring, #3b82f6);\n          outline-offset: 2px;\n        }\n        \n        .custom-input::placeholder {\n          color: var(--muted-foreground, #9ca3af);\n        }\n      </style>\n    </template>\n  };\n}\n```\n\n## State Examples\n\n**Interactive states:**\n```css\n.button {\n  background: var(--primary, #3b82f6);\n  color: var(--primary-foreground, #ffffff);\n}\n\n.button:hover {\n  background: var(--accent, #60a5fa);\n  color: var(--accent-foreground, #1e293b);\n}\n\n.button:disabled {\n  background: var(--muted, #f1f5f9);\n  color: var(--muted-foreground, #94a3b8);\n  opacity: 0.6;\n}\n```\n\n**Error states:**\n```css\n.input-error {\n  border-color: var(--destructive, #ef4444);\n}\n\n.error-message {\n  color: var(--destructive, #ef4444);\n  font-size: 0.875rem;\n}\n```\n\n## Layout Patterns\n\n**Spacing:**\n```css\n.container {\n  padding: calc(var(--spacing) * 4);      /* 1rem */\n  gap: calc(var(--spacing) * 2);           /* 0.5rem */\n}\n```\n\n**Shadows:**\n```css\n.card {\n  box-shadow: var(--shadow-md, 0 4px 6px -1px rgb(0 0 0 / 0.1));\n}\n\n.elevated {\n  box-shadow: var(--shadow-lg, 0 10px 15px -3px rgb(0 0 0 / 0.1));\n}\n```\n\n**Charts:**\n```css\n.chart-bar:nth-child(1) { background: var(--chart1, #3b82f6); }\n.chart-bar:nth-child(2) { background: var(--chart2, #10b981); }\n.chart-bar:nth-child(3) { background: var(--chart3, #f59e0b); }\n```\n\n**Brand Typography:**\n```css\n.heading {\n  font-family: var(--brand-heading-font-family, var(--font-sans, system-ui));\n  font-size: var(--brand-heading-font-size, 2rem);\n  font-weight: var(--brand-heading-font-weight, 700);\n  line-height: var(--brand-heading-line-height, 1.2);\n}\n\n.body-text {\n  font-family: var(--brand-body-font-family, var(--font-sans, system-ui));\n  font-size: var(--brand-body-font-size, 1rem);\n  font-weight: var(--brand-body-font-weight, 400);\n  line-height: var(--brand-body-line-height, 1.5);\n}\n```\n\n## Complete Example\n\n```gts\nimport { FieldDef, Component } from 'https://cardstack.com/base/card-api';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nexport class ThemedField extends FieldDef {\n  static edit = class Edit extends Component<typeof this> {\n    @tracked isOpen = false;\n    \n    <template>\n      <div class=\"field-wrapper\">\n        <label>Select Option</label>\n        <button class=\"trigger\" {{on \"click\" (fn (mut this.isOpen) (not this.isOpen))}}>\n          {{@model.value ?? \"Choose...\"}}\n        </button>\n        \n        {{#if this.isOpen}}\n          <div class=\"dropdown\">\n            {{#each @model.options as |option|}}\n              <button class=\"option\">{{option}}</button>\n            {{/each}}\n          </div>\n        {{/if}}\n      </div>\n      \n      <style scoped>\n        .field-wrapper {\n          display: flex;\n          flex-direction: column;\n          gap: calc(var(--spacing) * 2);\n        }\n        \n        label {\n          font-family: var(--font-sans, system-ui);\n          font-weight: 600;\n          font-size: 0.875rem;\n          color: var(--foreground, #1a1a1a);\n        }\n        \n        .trigger {\n          background: var(--input, #f5f5f5);\n          color: var(--foreground, #1a1a1a);\n          border: 1px solid var(--border, #e0e0e0);\n          border-radius: var(--radius, 0.375rem);\n          padding: calc(var(--spacing) * 2);\n          cursor: pointer;\n        }\n        \n        .trigger:hover {\n          background: var(--accent, #f0f9ff);\n        }\n        \n        .trigger:focus {\n          outline: 2px solid var(--ring, #3b82f6);\n          outline-offset: 2px;\n        }\n        \n        .dropdown {\n          background: var(--popover, #ffffff);\n          border: 1px solid var(--border, #e0e0e0);\n          border-radius: var(--radius, 0.375rem);\n          box-shadow: var(--shadow-lg, 0 10px 15px -3px rgb(0 0 0 / 0.1));\n          margin-top: calc(var(--spacing) * 2);\n        }\n        \n        .option {\n          width: 100%;\n          padding: calc(var(--spacing) * 2);\n          background: transparent;\n          border: none;\n          color: var(--popover-foreground, #1a1a1a);\n          text-align: left;\n          cursor: pointer;\n        }\n        \n        .option:hover {\n          background: var(--accent, #f0f9ff);\n        }\n      </style>\n    </template>\n  };\n}\n```\n\n## Key Principles\n\n1. **Always use `var(--variable, fallback)` syntax** - Never use variables without fallbacks\n2. **Choose fallbacks that match your field's design** - Don't copy example values blindly\n3. **Use semantic variable names** - `--primary`, not hard-coded colors\n4. **Respect spacing system** - Use `calc(var(--spacing) * n)` for consistency\n5. **Apply focus states** - Use `--ring` for accessibility\n6. **Test without theme** - Ensure fallbacks create a cohesive design\n7. **Leverage brand variables** - Use brand variables for consistent theming across your application",
      "cardInfo": {
        "notes": null,
        "title": "",
        "description": null,
        "thumbnailURL": null
      },
      "position": {
        "type": null,
        "referenceId": null
      },
      "reference": "theming-system",
      "topicName": "Theming System and CSS Variables"
    },
    "relationships": {
      "cardInfo.theme": {
        "links": {
          "self": null
        }
      }
    }
  }
}