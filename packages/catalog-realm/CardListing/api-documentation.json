{
  "data": {
    "type": "card",
    "attributes": {
      "name": "API Documentation",
      "summary": "## Overview\nCreate a comprehensive API Documentation card for software interface documentation and management in the Boxel framework. This card should help developers create, maintain, and share detailed API documentation with interactive examples, testing capabilities, and comprehensive reference materials for RESTful APIs, GraphQL, and other web services.\n\n## Core Fields\n\n### API Metadata\n- **apiName**: StringField - API title and identifier\n- **version**: StringField - API version number (semantic versioning)\n- **description**: MarkdownField - Comprehensive API overview\n- **baseUrl**: URLField - Primary API endpoint URL\n- **protocol**: StringField with enum: \"REST\", \"GraphQL\", \"SOAP\", \"WebSocket\", \"gRPC\"\n- **authentication**: contains(AuthenticationScheme) - Security and access methods\n- **supportedFormats**: containsMany(DataFormat) - JSON, XML, YAML, etc.\n- **status**: StringField with enum: \"draft\", \"beta\", \"stable\", \"deprecated\", \"retired\"\n- **lastUpdated**: DateTimeField - Most recent documentation update\n\n### API Specification\n- **openApiSpec**: contains(OpenAPIDocument) - OpenAPI/Swagger specification\n- **graphqlSchema**: contains(GraphQLSchema) - GraphQL type definitions\n- **endpoints**: containsMany(APIEndpoint) - Individual API routes\n- **dataModels**: containsMany(DataModel) - Request/response schemas\n- **errorCodes**: containsMany(ErrorDefinition) - Error response documentation\n- **rateLimits**: contains(RateLimitingInfo) - Usage restrictions and quotas\n- **pagination**: contains(PaginationScheme) - Data pagination methods\n- **webhooks**: containsMany(WebhookDefinition) - Event notification endpoints\n\n### Documentation Content\n- **gettingStarted**: MarkdownField - Quick start guide\n- **authentication**: MarkdownField - Security implementation guide\n- **tutorials**: containsMany(Tutorial) - Step-by-step implementation guides\n- **codeExamples**: containsMany(CodeExample) - Working code snippets\n- **useCases**: containsMany(UseCase) - Real-world application scenarios\n- **bestPractices**: MarkdownField - Recommended implementation patterns\n- **troubleshooting**: MarkdownField - Common issues and solutions\n- **changelog**: containsMany(ChangelogEntry) - Version history and updates\n\n### Interactive Features\n- **apiExplorer**: contains(InteractiveExplorer) - Try-it-now functionality\n- **requestBuilder**: contains(RequestBuilder) - Visual request construction\n- **responseViewer**: contains(ResponseViewer) - Formatted response display\n- **testingEnvironment**: contains(TestEnvironment) - Sandbox for experimentation\n- **mockServer**: contains(MockServerConfig) - Simulated API responses\n- **postmanCollection**: contains(PostmanExport) - Postman workspace integration\n- **curlExamples**: containsMany(CurlCommand) - Command-line request examples\n- **sdkGeneration**: containsMany(SDKConfig) - Client library generation\n\n### API Endpoint Details\n- **httpMethods**: containsMany(HTTPMethod) - GET, POST, PUT, DELETE, etc.\n- **pathParameters**: containsMany(PathParameter) - URL variable definitions\n- **queryParameters**: containsMany(QueryParameter) - URL query string options\n- **requestHeaders**: containsMany(RequestHeader) - Required and optional headers\n- **requestBody**: contains(RequestBodySchema) - Payload structure and validation\n- **responseSchemas**: containsMany(ResponseSchema) - Success and error responses\n- **statusCodes**: containsMany(StatusCode) - HTTP response code meanings\n- **examples**: containsMany(EndpointExample) - Sample requests and responses\n\n### Security Documentation\n- **authenticationMethods**: containsMany(AuthMethod) - API key, OAuth, JWT, etc.\n- **scopes**: containsMany(AuthScope) - Permission levels and access rights\n- **securityRequirements**: containsMany(SecurityRequirement) - Endpoint-specific auth\n- **encryptionInfo**: contains(EncryptionDetails) - Data protection methods\n- **complianceStandards**: containsMany(ComplianceStandard) - GDPR, HIPAA, etc.\n- **vulnerabilityInfo**: containsMany(SecurityVulnerability) - Known security issues\n- **securityBestPractices**: MarkdownField - Recommended security implementation\n\n### Developer Experience\n- **sdks**: containsMany(SDK) - Client libraries and wrappers\n- **codeGenerators**: containsMany(CodeGenerator) - Auto-generated client code\n- **integrationGuides**: containsMany(IntegrationGuide) - Platform-specific instructions\n- **tooling**: containsMany(DeveloperTool) - Supporting development tools\n- **communityResources**: containsMany(CommunityResource) - Forums, blogs, tutorials\n- **supportChannels**: containsMany(SupportChannel) - Help and assistance options\n- **developerPortal**: contains(DeveloperPortalInfo) - Registration and key management\n\n### Testing & Validation\n- **testSuites**: containsMany(TestSuite) - Automated API testing\n- **validationRules**: containsMany(ValidationRule) - Input validation requirements\n- **contractTesting**: contains(ContractTestConfig) - Consumer-driven testing\n- **performanceBenchmarks**: containsMany(PerformanceBenchmark) - Speed and throughput\n- **loadTestingResults**: containsMany(LoadTestResult) - Scalability testing data\n- **monitoringDashboard**: contains(MonitoringInfo) - API health and metrics\n- **alertingRules**: containsMany(AlertingRule) - Error and performance alerts\n\n### Versioning & Migration\n- **versioningStrategy**: StringField - Semantic, date-based, or custom versioning\n- **backwardCompatibility**: MarkdownField - Breaking change policies\n- **migrationGuides**: containsMany(MigrationGuide) - Version upgrade instructions\n- **deprecationNotices**: containsMany(DeprecationNotice) - Sunset timeline and alternatives\n- **versionComparison**: containsMany(VersionComparison) - Feature differences\n- **rollbackProcedures**: MarkdownField - Version downgrade instructions\n\n## Required Component Cards\n\n### APIEndpoint Card\nCreate a separate APIEndpoint card with:\n- **endpointPath**: StringField - URL path with parameters\n- **httpMethod**: StringField - GET, POST, PUT, DELETE, PATCH\n- **summary**: StringField - Brief endpoint description\n- **description**: MarkdownField - Detailed functionality explanation\n- **operationId**: StringField - Unique identifier for operation\n- **tags**: containsMany(StringField) - Endpoint categorization\n- **deprecated**: BooleanField - Whether endpoint is deprecated\n- **parameters**: containsMany(Parameter) - All endpoint parameters\n- **requestBody**: contains(RequestBodyDefinition) - Request payload schema\n- **responses**: containsMany(ResponseDefinition) - Possible responses\n- **security**: containsMany(SecurityRequirement) - Authentication requirements\n- **examples**: containsMany(OperationExample) - Request/response examples\n\n### DataModel Card\n- **modelName**: StringField - Schema name\n- **description**: MarkdownField - Model purpose and usage\n- **properties**: containsMany(PropertyDefinition) - Object properties\n- **required**: containsMany(StringField) - Required property names\n- **additionalProperties**: BooleanField - Allow extra properties\n- **discriminator**: StringField - Polymorphism property\n- **example**: contains(ExampleData) - Sample model instance\n- **constraints**: containsMany(ValidationConstraint) - Value restrictions\n- **relationships**: containsMany(ModelRelationship) - Connections to other models\n- **inheritance**: linksTo(ParentModel) - Model inheritance hierarchy\n\n### CodeExample Card\n- **language**: StringField - Programming language\n- **title**: StringField - Example title\n- **description**: MarkdownField - What the example demonstrates\n- **code**: StringField - Actual code content\n- **explanation**: MarkdownField - Line-by-line code explanation\n- **dependencies**: containsMany(StringField) - Required libraries or packages\n- **executionContext**: StringField - Where/how to run the code\n- **expectedOutput**: StringField - What result to expect\n- **tags**: containsMany(StringField) - Example categorization\n- **difficulty**: StringField - Beginner, intermediate, advanced\n- **lastTested**: DateField - When example was verified to work\n\n## Computed Fields Logic\n\n### Documentation Completeness\nCalculate percentage of documented endpoints and required fields.\n\n### API Complexity Score\nAnalyze number of endpoints, parameters, and data models for complexity rating.\n\n### Version Compatibility\nTrack breaking changes and compatibility between API versions.\n\n### Usage Analytics\nMonitor which documentation sections are most accessed.\n\n## Card Layout Design\n\n### Isolated/Embedded View Layout\nDesign a developer-focused documentation interface:\n\n**Header Section**\n- API name and version prominently displayed\n- Status badge (stable, beta, deprecated)\n- Quick links to getting started and authentication\n- Search functionality for endpoints and content\n- Download links for OpenAPI spec and SDKs\n\n**Navigation Sidebar**\n- **Getting Started**: Quick start guide\n- **Authentication**: Security implementation\n- **Endpoints**: Organized by tags or resources\n- **Data Models**: Schema definitions\n- **Tutorials**: Step-by-step guides\n- **SDKs**: Client libraries\n- **Changelog**: Version history\n\n**Main Content Area**\n- **Endpoint Documentation**:\n  - HTTP method and path\n  - Description and parameters\n  - Request/response examples\n  - Try-it-now interface\n  - Code examples in multiple languages\n  \n- **Interactive API Explorer**:\n  - Parameter input forms\n  - Real-time request building\n  - Response visualization\n  - Error handling demonstration\n\n**Reference Panel**\n- Data model schemas\n- Error code reference\n- Rate limiting information\n- Authentication token management\n- API status and health metrics\n\n### Try-It-Now Interface\n- Parameter input fields\n- Authentication configuration\n- Request headers customization\n- Request body editor\n- Send request button\n- Response display with formatting\n- Copy as cURL command\n\n### Code Example Display\n- Multi-language code tabs\n- Syntax highlighting\n- Copy to clipboard functionality\n- Runnable code samples\n- Expected output display\n\n## Interactive Features\n\n### API Testing Playground\n- Live API request testing\n- Authentication token management\n- Request/response logging\n- Error scenario testing\n- Performance timing display\n\n### Documentation Generation\n- Auto-generate from OpenAPI specs\n- Sync with code annotations\n- Multi-format export options\n- Custom theme application\n- Automated testing integration\n\n### Collaboration Tools\n- Comment system for feedback\n- Version comparison tools\n- Change notification system\n- Review and approval workflows\n- Team permission management\n\n## Styling Requirements\n- Technical documentation aesthetic\n- Code syntax highlighting\n- Responsive mobile-friendly design\n- High contrast for accessibility\n- Print-friendly layouts\n- Multi-theme support\n- Customizable branding\n- Professional developer appearance\n\n## Validation Rules\n- OpenAPI specification compliance\n- Valid URL and endpoint formats\n- HTTP status code accuracy\n- JSON schema validation\n- Authentication method verification\n- Example code syntax checking\n- Link and reference validation\n- Version number format consistency\n\n## Integration Points\n- **API Development**: Swagger/OpenAPI, Postman, Insomnia\n- **Documentation Platforms**: GitBook, Notion, Confluence\n- **Code Repositories**: GitHub, GitLab, Bitbucket\n- **CI/CD Pipelines**: Jenkins, GitHub Actions, CircleCI\n- **API Management**: Kong, AWS API Gateway, Azure APIM\n- **Testing Tools**: Newman, Dredd, Pact\n- **Monitoring**: DataDog, New Relic, Pingdom\n- **Developer Portals**: Custom portals and marketplaces\n- **Authentication**: Auth0, Okta, Firebase Auth\n- **Version Control**: Git-based documentation workflows\n\n## Business Logic Requirements\n- Automatic OpenAPI specification parsing and rendering\n- Real-time API testing and validation\n- Multi-version documentation management\n- Interactive code example generation\n- Authentication flow simulation\n- Performance metrics integration\n- Change tracking and notification system\n- Search and discovery optimization\n- Mobile-responsive documentation delivery\n- Custom branding and white-label options\n- Analytics and usage tracking\n- Community feedback and contribution management\n- Integration with development workflows\n- Automated testing and validation",
      "images": [
        "https://dummyimage.com/400x300/f0fdfa/0d9488&text=API+Documentation"
      ],
      "isStub": true,
      "description": null,
      "thumbnailURL": null
    },
    "relationships": {
      "specs": {
        "links": {
          "self": null
        }
      },
      "publisher": {
        "links": {
          "self": null
        }
      },
      "categories.0": {
        "links": {
          "self": "../Category/api-integration"
        }
      },
      "tags.0": {
        "links": {
          "self": "../Tag/stub"
        }
      },
      "license": {
        "links": {
          "self": null
        }
      },
      "examples": {
        "links": {
          "self": null
        }
      },
      "skills": {
        "links": {
          "self": null
        }
      }
    },
    "meta": {
      "adoptsFrom": {
        "module": "../catalog-app/listing/listing",
        "name": "CardListing"
      }
    }
  }
}
