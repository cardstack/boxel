{
  "data": {
    "type": "card",
    "attributes": {
      "name": "Code Repository",
      "summary": "## Overview\nCreate a comprehensive Code Repository card for software project management in the Boxel framework. This card should serve as the central hub for code organization, version control, collaboration, and project tracking with integration to popular development platforms and tools.\n\n## Core Fields\n\n### Repository Information\n- **repositoryName**: StringField - Project name\n- **description**: MarkdownField - Project description and purpose\n- **repositoryUrl**: URLField - Git repository URL\n- **visibility**: StringField with enum: \"public\", \"private\", \"internal\"\n- **license**: StringField - Software license (MIT, GPL, Apache, etc.)\n- **language**: StringField - Primary programming language\n- **languages**: containsMany(ProgrammingLanguage) - All languages used\n- **topics**: containsMany(StringField) - Repository tags/topics\n- **stars**: NumberField - GitHub stars or equivalent\n- **forks**: NumberField - Repository forks\n- **watchers**: NumberField - Repository watchers\n\n### Project Details\n- **projectType**: StringField with enum: \"library\", \"application\", \"framework\", \"tool\", \"documentation\", \"template\"\n- **status**: StringField with enum: \"active\", \"maintenance\", \"archived\", \"deprecated\", \"experimental\"\n- **maturity**: StringField with enum: \"planning\", \"alpha\", \"beta\", \"stable\", \"mature\"\n- **size**: NumberField - Lines of code\n- **complexity**: NumberField - Cyclomatic complexity score\n- **technicalDebt**: NumberField - Code quality debt hours\n- **maintainability**: NumberField - Maintainability index\n\n### Version Control\n- **defaultBranch**: StringField - Main branch name (main, master)\n- **branches**: containsMany(Branch) - All repository branches\n- **commits**: NumberField - Total commit count\n- **lastCommit**: DateTimeField - Most recent commit\n- **commitFrequency**: NumberField - Commits per month average\n- **contributors**: linksToMany(Contributor) - Project contributors\n- **releases**: containsMany(Release) - Tagged releases\n- **currentVersion**: StringField - Latest version number\n\n### Documentation\n- **readme**: contains(MarkdownField) - Main documentation\n- **documentation**: contains(DocumentationSite) - Full docs\n- **apiDocs**: contains(APIDocumentation) - API reference\n- **changelog**: contains(ChangelogFile) - Version history\n- **contributing**: contains(ContributingGuide) - Contribution guidelines\n- **codeOfConduct**: contains(CodeOfConduct) - Community standards\n- **examples**: containsMany(CodeExample) - Usage examples\n- **tutorials**: containsMany(Tutorial) - Learning materials\n\n### Development Environment\n- **buildSystem**: StringField - Make, Maven, npm, etc.\n- **dependencies**: containsMany(Dependency) - External libraries\n- **devDependencies**: containsMany(DevDependency) - Development tools\n- **packageManager**: StringField - npm, pip, cargo, etc.\n- **containerization**: contains(ContainerConfig) - Docker configuration\n- **cicdPipeline**: contains(Pipeline) - Continuous integration\n- **deploymentTargets**: containsMany(DeploymentTarget) - Where deployed\n\n### Code Quality\n- **testCoverage**: NumberField - Test coverage percentage\n- **testSuites**: containsMany(TestSuite) - Testing frameworks\n- **linting**: contains(LintingConfig) - Code style enforcement\n- **formatting**: contains(FormattingConfig) - Code formatting rules\n- **securityScans**: containsMany(SecurityScan) - Vulnerability scans\n- **performanceMetrics**: contains(PerformanceData) - Benchmark results\n- **codeReviews**: containsMany(CodeReview) - Review process\n\n### Issues & Project Management\n- **openIssues**: NumberField - Current open issues\n- **closedIssues**: NumberField - Resolved issues\n- **pullRequests**: containsMany(PullRequest) - Code contributions\n- **milestones**: containsMany(ProjectMilestone) - Development milestones\n- **roadmap**: contains(ProjectRoadmap) - Future development plans\n- **bugReports**: containsMany(BugReport) - Issue tracking\n- **featureRequests**: containsMany(FeatureRequest) - Enhancement requests\n\n### Community & Collaboration\n- **maintainers**: linksToMany(Maintainer) - Project maintainers\n- **organization**: linksTo(Organization) - Owning organization\n- **community**: contains(CommunityInfo) - Community resources\n- **discussions**: containsMany(Discussion) - Community discussions\n- **sponsorship**: contains(SponsorshipInfo) - Funding information\n- **governance**: contains(GovernanceModel) - Decision-making process\n\n## Required Component Cards\n\n### Contributor Card\nCreate a separate Contributor card with:\n- **username**: StringField - GitHub/platform username\n- **displayName**: StringField - Full name\n- **email**: EmailField - Contact email\n- **commits**: NumberField - Total contributions\n- **linesAdded**: NumberField - Code additions\n- **linesRemoved**: NumberField - Code deletions\n- **firstContribution**: DateField - First commit date\n- **lastContribution**: DateField - Most recent commit\n- **role**: StringField - Maintainer, contributor, occasional\n- **expertise**: containsMany(StringField) - Areas of contribution\n\n### Release Card\n- **version**: StringField - Release version number\n- **releaseDate**: DateField - Publication date\n- **releaseNotes**: MarkdownField - What's new/changed\n- **downloadCount**: NumberField - Release downloads\n- **assets**: containsMany(ReleaseAsset) - Downloadable files\n- **prerelease**: BooleanField - Pre-release flag\n- **breaking**: BooleanField - Contains breaking changes\n- **commits**: NumberField - Commits in this release\n- **contributors**: linksToMany(Contributor) - Release contributors\n\n### Dependency Card\n- **packageName**: StringField - Library name\n- **version**: StringField - Version used\n- **latestVersion**: StringField - Available version\n- **updateAvailable**: BooleanField - Can be updated\n- **securityVulnerabilities**: NumberField - Known vulns\n- **license**: StringField - Dependency license\n- **description**: StringField - What this dependency does\n- **size**: NumberField - Package size\n- **lastUpdated**: DateField - Last package update\n\n## Computed Fields Logic\n\n### Activity Score\nCalculate repository activity based on commits, issues, and PR frequency.\n\n### Health Score\nCombine test coverage, documentation completeness, and maintenance activity.\n\n### Complexity Metrics\nAnalyze code structure to determine complexity and maintainability scores.\n\n### Trend Analysis\nTrack contributor growth, issue resolution rate, and development velocity.\n\n## Card Layout Design\n\n### Isolated/Embedded View Layout\nDesign a developer-focused repository interface:\n\n**Header Section**\n- Repository name and description\n- Language badges and topics\n- Star/fork/watch counts\n- Clone/download buttons\n- Repository status indicators\n\n**Quick Stats Dashboard**\n- **Code Metrics**:\n  - Lines of code\n  - Primary language percentage\n  - File count\n  - Commit frequency\n  - Last activity\n  \n- **Quality Indicators**:\n  - Test coverage gauge\n  - Code quality score\n  - Security vulnerability count\n  - Documentation completeness\n  - Build status\n\n**Navigation Tabs**\n- **Code**: File browser and content\n- **Issues**: Bug reports and features\n- **Pull Requests**: Code contributions\n- **Actions**: CI/CD pipeline status\n- **Insights**: Analytics and metrics\n- **Settings**: Repository configuration\n\n**File Browser**\n- Tree view of repository structure\n- File type indicators\n- Quick file preview\n- Search functionality\n- Branch/tag selector\n\n**Recent Activity**\n- Latest commits feed\n- Recent issues/PRs\n- Release announcements\n- Contributor activity\n- Build status updates\n\n**Collaboration Panel**\n- Active contributors\n- Pending reviews\n- Open issues summary\n- Community discussions\n- Project milestones\n\n### Developer Dashboard View\n- Personal contribution stats\n- Assigned issues/PRs\n- Review requests\n- Build notifications\n- Dependency updates\n\n### Project Overview View\n- High-level project metrics\n- Roadmap visualization\n- Team performance\n- Release planning\n- Community health\n\n## Interactive Features\n\n### Code Exploration\n- Syntax highlighting\n- Code search\n- Blame annotations\n- Diff visualization\n- Symbol navigation\n\n### Collaboration Tools\n- Inline code comments\n- Review workflows\n- Issue linking\n- Automated workflows\n- Team notifications\n\n### Analytics\n- Contributor insights\n- Code frequency charts\n- Issue lifecycle tracking\n- Performance trends\n- Security monitoring\n\n## Styling Requirements\n- Developer-friendly dark themes\n- Code syntax highlighting\n- Monospace font support\n- High contrast for readability\n- Responsive mobile design\n- Accessibility compliance\n- Platform brand consistency\n- Performance optimization\n\n## Validation Rules\n- Repository URL format validation\n- Version number semantic format\n- License compatibility checking\n- Branch name conventions\n- Commit message standards\n- Code quality thresholds\n- Security policy compliance\n- Documentation requirements\n\n## Integration Points\n- **Git Platforms**: GitHub, GitLab, Bitbucket, Azure DevOps\n- **CI/CD Tools**: GitHub Actions, Jenkins, Travis CI\n- **Code Quality**: SonarQube, CodeClimate, Codacy\n- **Security Scanning**: Snyk, OWASP, GitHub Security\n- **Documentation**: GitBook, Notion, Confluence\n- **Package Managers**: npm, PyPI, RubyGems, Maven\n- **IDEs**: VS Code, IntelliJ, Eclipse integration\n- **Project Management**: Jira, Linear, GitHub Projects\n- **Communication**: Slack, Discord, Microsoft Teams\n- **Monitoring**: Sentry, DataDog, New Relic\n\n## Business Logic Requirements\n- Automated dependency vulnerability scanning\n- Code quality gate enforcement\n- Contributor recognition algorithms\n- Release automation workflows\n- Issue triage and labeling\n- Performance regression detection\n- License compliance checking\n- Documentation sync and updates\n- Community health monitoring\n- Backup and disaster recovery\n- Access control and permissions\n- Audit logging and compliance\n- Resource usage optimization\n- Development workflow automation",
      "images": [
        "https://dummyimage.com/400x300/f0fdfa/0d9488&text=Code+Repository"
      ],
      "isStub": true,
      "description": null,
      "thumbnailURL": null
    },
    "relationships": {
      "specs": {
        "links": {
          "self": null
        }
      },
      "publisher": {
        "links": {
          "self": null
        }
      },
      "categories.0": {
        "links": {
          "self": "../Category/software-development"
        }
      },
      "tags": {
        "links": {
          "self": null
        }
      },
      "license": {
        "links": {
          "self": null
        }
      },
      "examples": {
        "links": {
          "self": null
        }
      },
      "skills": {
        "links": {
          "self": null
        }
      },
      "tags.0": {
        "links": {
          "self": "../Tag/stub"
        }
      }
    },
    "meta": {
      "adoptsFrom": {
        "module": "../catalog-app/listing/listing",
        "name": "CardListing"
      }
    }
  }
}
